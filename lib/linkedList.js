// Generated by CoffeeScript 1.9.1
var LinkedList, Node;

LinkedList = (function() {
  function LinkedList(head) {
    this.head = head;
  }

  LinkedList.prototype.toString = function() {
    var current, string;
    current = this.head;
    string = "";
    while (current.next != null) {
      string = string + current.val + ", ";
      current = current.next;
    }
    string = string + current.val;
    return string;
  };

  LinkedList.prototype.insert = function(node) {
    node.next = this.head;
    this.head.prev = node;
    return this.head = node;
  };

  LinkedList.prototype.remove = function(node) {
    if (node.next == null) {
      return null;
    }
    if (node.prev != null) {
      node.prev.next = node.next;
      node.next.prev = node.prev;
    } else {
      node.next.prev = null;
      this.head = node.next;
    }
    return node.val;
  };

  LinkedList.prototype.search = function(val) {
    var current;
    current = this.head;
    while (!(current.val === val || (current.next == null))) {
      current = current.next;
    }
    if (current.val !== val) {
      return null;
    }
    return current.val;
  };

  return LinkedList;

})();

Node = (function() {
  function Node(val, next, prev) {
    this.val = val;
    this.next = next;
    this.prev = prev;
  }

  return Node;

})();

module.exports = {
  LinkedList: LinkedList,
  Node: Node
};
